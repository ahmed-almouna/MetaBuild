# Generated by Django 5.2.3 on 2025-09-08 22:46

import django.contrib.postgres.fields
import django.core.validators
import pcbuilder.utils.constraints
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('builder', '0020_alter_caseprice_buylink_alter_coolerprice_buylink_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='case',
            name='expansionSlots',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='expansionSlotsViaRiser',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='formFactor',
            field=models.CharField(choices=[('DESKTOP', 'Desktop'), ('TOWER', 'Tower'), ('MINI TOWER', 'Mini Tower'), ('MID TOWER', 'Mid Tower'), ('FULL TOWER', 'Full Tower')]),
        ),
        migrations.AlterField(
            model_name='case',
            name='height',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(2000)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='includedPSUWattage',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='length',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(2000)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='manufacturer',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='case',
            name='maxGPULength',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(700)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='moboFormFactors',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('EATX', 'EATX'), ('ATX', 'ATX'), ('MICRO ATX', 'Micro ATX'), ('MINI ITX', 'Mini ITX')]), size=None),
        ),
        migrations.AlterField(
            model_name='case',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='case',
            name='pcPartPickerId',
            field=models.CharField(unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='threePointFiveDriveBays',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='twoPointFiveDriveBays',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='case',
            name='type',
            field=models.CharField(choices=[('ATX', 'ATX'), ('MICRO ATX', 'Micro ATX'), ('MINI ITX', 'Mini ITX')]),
        ),
        migrations.AlterField(
            model_name='case',
            name='width',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(2000)]),
        ),
        migrations.AlterField(
            model_name='caseprice',
            name='price',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)]),
        ),
        migrations.AlterField(
            model_name='cooler',
            name='manufacturer',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='cooler',
            name='name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='cooler',
            name='pcPartPickerId',
            field=models.CharField(unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)]),
        ),
        migrations.AlterField(
            model_name='cooler',
            name='supportedSockets',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None, validators=[pcbuilder.utils.constraints.validateCoolerSockets]),
        ),
        migrations.AlterField(
            model_name='cooler',
            name='width',
            field=models.IntegerField(choices=[(0, '0 mm'), (120, '120 mm'), (140, '140 mm'), (240, '240 mm'), (280, '280 mm'), (360, '360 mm'), (420, '420 mm')]),
        ),
        migrations.AlterField(
            model_name='coolerprice',
            name='price',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)]),
        ),
        migrations.AlterField(
            model_name='cpu',
            name='boostClock',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(10000)]),
        ),
        migrations.AlterField(
            model_name='cpu',
            name='cacheSize',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(250)]),
        ),
        migrations.AlterField(
            model_name='cpu',
            name='coreCount',
            field=models.IntegerField(choices=[(2, '2'), (4, '4'), (6, '6'), (8, '8'), (10, '10'), (11, '11'), (12, '12'), (14, '14'), (16, '16'), (18, '18'), (20, '20'), (22, '22'), (24, '24'), (26, '26'), (28, '28'), (30, '30'), (32, '32'), (34, '34'), (36, '36'), (38, '38'), (40, '40')]),
        ),
        migrations.AlterField(
            model_name='cpu',
            name='integratedGPU',
            field=models.CharField(choices=[('NONE', 'None'), ('RADEON', 'Radeon'), ('RADEON 740M', 'Radeon 740M'), ('RADEON 760M', 'Radeon 760M'), ('RADEON 780M', 'Radeon 780M'), ('RADEON VEGA 7', 'Radeon Vega 7'), ('RADEON VEGA 8', 'Radeon Vega 8'), ('RADEON VEGA 11', 'Radeon Vega 11'), ('INTEL HD GRAPHICS 630', 'HD Graphics 630'), ('INTEL UHD GRAPHICS 630', 'UHD Graphics 630'), ('INTEL UHD GRAPHICS 730', 'UHD Graphics 730'), ('INTEL UHD GRAPHICS 750', 'UHD Graphics 750'), ('INTEL UHD GRAPHICS 770', 'UHD Graphics 770'), ('INTEL XE', 'Intel Xe')]),
        ),
        migrations.AlterField(
            model_name='cpu',
            name='model',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='cpu',
            name='tdp',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(300)]),
        ),
        migrations.AlterField(
            model_name='cpu',
            name='threadCount',
            field=models.IntegerField(choices=[(2, '2'), (4, '4'), (6, '6'), (8, '8'), (10, '10'), (11, '11'), (12, '12'), (14, '14'), (16, '16'), (18, '18'), (20, '20'), (22, '22'), (24, '24'), (26, '26'), (28, '28'), (30, '30'), (32, '32'), (34, '34'), (36, '36'), (38, '38'), (40, '40')]),
        ),
        migrations.AlterField(
            model_name='cpuprice',
            name='price',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='boostClock',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(5000)]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='brand',
            field=models.CharField(choices=[('AMD', 'AMD'), ('NVIDIA', 'Nvidia'), ('INTEL', 'Intel')]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='expansionSlots',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='length',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(500)]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='manufacturer',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='model',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='pcPartPickerId',
            field=models.CharField(unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='pciePowerConnectors',
            field=models.CharField(choices=[('NONE', 'None'), ('1 X 6-PIN', '1 x 6-pin'), ('1 X 8-PIN', '1 x 8-pin'), ('1 X 8-PIN + 1 X 6-PIN', '1 x 8-pin + 1 x 6-pin'), ('2 X 8-PIN', '2 x 8-pin'), ('2 X 8-PIN + 1 X 6-PIN', '2 x 8-pin + 1 x 6-pin'), ('3 X 8-PIN', '3 x 8-pin'), ('1 X 12-PIN', '1 x 12-pin'), ('1 X 16-PIN', '1 x 16-pin'), ('2 X 16-PIN', '2 x 16-pin')]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='series',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='tdp',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(1000)]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='vramSize',
            field=models.IntegerField(choices=[(2, '2'), (4, '4'), (6, '6'), (8, '8'), (10, '10'), (11, '11'), (12, '12'), (14, '14'), (16, '16'), (18, '18'), (20, '20'), (22, '22'), (24, '24'), (26, '26'), (28, '28'), (30, '30'), (32, '32'), (34, '34'), (36, '36'), (38, '38'), (40, '40')]),
        ),
        migrations.AlterField(
            model_name='gpu',
            name='vramType',
            field=models.CharField(choices=[('GDDR6', 'GDDR6'), ('GDDR6X', 'GDDR6X'), ('GDDR7', 'GDDR7')]),
        ),
        migrations.AlterField(
            model_name='gpuprice',
            name='price',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)]),
        ),
        migrations.AlterField(
            model_name='mobo',
            name='chipset',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='mobo',
            name='formFactor',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='mobo',
            name='manufacturer',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='mobo',
            name='memoryType',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='mobo',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='mobo',
            name='pcPartPickerId',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='mobo',
            name='socket',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='psu',
            name='cpu8PinConnectors',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='efficiency',
            field=models.CharField(choices=[('80+', '80+'), ('BRONZE', 'Bronze'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLATINUM', 'Platinum'), ('TITANIUM', 'Titanium')]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='formFactor',
            field=models.CharField(choices=[('ATX', 'ATX'), ('SFX', 'SFX')]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='gpu12PinConnectors',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='gpu16PinConnectors',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='gpu6PinConnectors',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='gpu6Plus2PinConnectors',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='gpu8PinConnectors',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='manufacturer',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='psu',
            name='name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='psu',
            name='pcPartPickerId',
            field=models.CharField(unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='sataConnectors',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)]),
        ),
        migrations.AlterField(
            model_name='psu',
            name='wattage',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(3000)]),
        ),
        migrations.AlterField(
            model_name='psuprice',
            name='price',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)]),
        ),
        migrations.AlterField(
            model_name='ram',
            name='count',
            field=models.IntegerField(choices=[(1, '1'), (2, '2'), (4, '4')]),
        ),
        migrations.AlterField(
            model_name='ram',
            name='manufacturer',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='ram',
            name='name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='ram',
            name='pcPartPickerId',
            field=models.CharField(unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)]),
        ),
        migrations.AlterField(
            model_name='ram',
            name='size',
            field=models.IntegerField(choices=[(4, '4GB'), (8, '8GB'), (16, '16GB'), (24, '24GB'), (32, '32GB'), (48, '48GB'), (64, '64GB')]),
        ),
        migrations.AlterField(
            model_name='ram',
            name='speed',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(10000)]),
        ),
        migrations.AlterField(
            model_name='ram',
            name='type',
            field=models.CharField(choices=[('DDR4', 'DDR4'), ('DDR5', 'DDR5')]),
        ),
        migrations.AlterField(
            model_name='ramprice',
            name='price',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)]),
        ),
        migrations.AlterField(
            model_name='storage',
            name='cacheSize',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)]),
        ),
        migrations.AlterField(
            model_name='storage',
            name='formFactor',
            field=models.CharField(choices=[('M.2', 'M.2'), ('2.5', '2.5'), ('3.5', '3.5'), ('PCIE', 'PCIe')]),
        ),
        migrations.AlterField(
            model_name='storage',
            name='manufacturer',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='storage',
            name='name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='storage',
            name='pcPartPickerId',
            field=models.CharField(unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)]),
        ),
        migrations.AlterField(
            model_name='storage',
            name='size',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(8), django.core.validators.MaxValueValidator(40000)]),
        ),
        migrations.AlterField(
            model_name='storageprice',
            name='price',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)]),
        ),
    ]
